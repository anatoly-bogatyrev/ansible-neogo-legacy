---

- name: Test the run mode -- docker xor systemd
  ansible.builtin.fail:
    msg: "Define one of the options: neogo__use_systemd, neogo__use_compose, to True, another to False"
  when: not ((neogo__use_compose and (not neogo__use_systemd)) or ((not neogo__use_compose) and neogo__use_systemd))

- name: Prepare user to run Neo2
  ansible.builtin.include: 'prepare_user.yml'

- name: Ensure data directory exists
  ansible.builtin.file:
    state: directory
    path: "{{ neogo__data_dir }}"
    owner: "{{ neogo__user }}"
    group: "{{ neogo__group }}"

- name: Ensure configuration directory exists
  ansible.builtin.file:
    state: directory
    path: "{{ neogo__conf_dir }}"
    owner: "root"

- name: Prepare Neo Go config for {{ neogo__network }}
  ansible.builtin.template:
    src: "protocol.network.yml.j2"
    dest: "{{ neogo__conf_dir }}/protocol.{{ neogo__network }}.yml"
    owner: '{{ neogo__user }}'
    group: '{{ neogo__group }}'
    mode: '0640'

- name: Prepare Neo Wallet
  ansible.builtin.copy:
    dest: "{{ neogo__wallet_path }}"
    content: "{{ neogo__wallet_content }}"
    owner: "{{ neogo__user }}"
    group: "{{ neogo__group }}"
    mode: "0640"
  when: (neogo__wallet_content is defined) and (neogo__wallet_content|length > 0)

- name: Prepare configuration for TLS
  ansible.builtin.include: "configure_tls.yml"
  when: neogo__tls_enabled

- name: Restore DB from dump
  ansible.builtin.include: "db_restore.yml"
  when: neogo__db_dump_restore

- name: Force debops.ferm run
  ansible.builtin.include_role:
    name: debops.debops.ferm
  vars:
    ferm__dependent_rules:
      - "{{ neogo__ferm__dependent_rules }}"
  when: neogo__debops_ferm_import | bool

- name: Install and run NeoGo Node using Docker Compose
  ansible.builtin.include: "install_compose.yml"
  when: neogo__use_compose

- name: Install and run NeoGo Node using SystemD
  ansible.builtin.include: "install_systemd.yml"
  when: neogo__use_systemd

- name: Ensure Neo Go service runs
  ansible.builtin.systemd:
    name: "neo-go{{ neogo__instance }}.service"
    state: "restarted"
    enabled: yes
    daemon_reload: yes
